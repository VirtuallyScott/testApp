services:
  web:
    build:
      context: ./src/web
      args:
        - VERSION=${VERSION:-0.0.1}
    ports:
      - "80:80"
    volumes:
      - ./src/web:/app
      - /app/node_modules
      - ./logs/web:/var/log/web
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api/v1
    depends_on:
      - api

  api:
    build:
      context: ./src/api
      args:
        - VERSION=${VERSION:-0.0.1}
    ports:
      - "8000:8000"
    volumes:
      - ./src/api:/app
      - ./logs/api:/var/log/api
    working_dir: /app
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/app_db
      - REDIS_URL=redis://:redis_password@redis:6379/0
      - PYTHONPATH=/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  db:
    build:
      context: ./src/db
      args:
        - VERSION=${VERSION:-0.0.1}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./logs/db:/var/log/postgresql
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=app_db
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d app_db"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s

  redis:
    build:
      context: ./src/redis
      args:
        - VERSION=${VERSION:-0.0.1}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./logs/redis:/var/log/redis
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  test-redis:
    build:
      context: ./src/redis
      dockerfile: Dockerfile.test
    ports:
      - "6380:6379"

volumes:
  postgres_data:
  redis_data:
